inside the terminal 
npm int -y or npm init 
npm i mongoose express colors dotenv nodemon morgan

browser client side
nodejs server side
what is console?
console is the place where we can see the output of our code

what is the difference between browser console and system terminal
browser console is the place where we can see the output of our code inside any browser
system terminal is the place where we can see the output of our code inside any system

what is the difference between server and system
server is the resources that is available in any region at any weather condition and at any point of time.
system is the resources that is not following any such criteria

server ==system == os

os
1. Operating system
2. Webserver
3. Web browser
4. Web application
5. HTTP modules 
6. File system
7. Routing

server.js======> upar diye gaye 7 kaam agar isi ek file me ho jaye to monolithic architecture ban jayega or agar
divide kar denge to distributive architecture ban jayega

Model View Controller MVC
Model == database
View == front end
controller == backend

System design of MVC
1. monolithic architecture
2. distributive architecture
3. microservices architecture
4. Scalability
5. load balancing
6. Caching
7. Routing


HTTP methods
get: Any information that is server by the server to the frontend.
post: any information taken from frontend by the server
put: Any information update by the server to the frontend
delete: Any information delete by the server to the frontend
patch: Specific information update by the server to the frontend

Kisi bhi information ko crerate karna==> post
information ko update karna==> put patch
delete karna==> delete
read karna==> get

Path module
offilen \  c:\
online /   localhost:8000   slash formate   / root folder hota he
online / www.google.com domain formate

npm vs npx

JavaScript
    Vannila js:
        It is pure JavaScript without frameworks and libraries. Used for web development, handling DOM
        manipulation, events and interactions without additional dependencies.

    Node js:
        It is Server side JavaScript runtime environment. Facilitates backend development, handles server
        operations. enables asynchronous, event-driven programming and Scalable network applications.

    React js:
        It is JavaScript library for building user interfaces. Developed by facebook. Focuses on component based
        architecture. Virtual DOM for efficient rendering and state management in web applications.

    Express js:
        Web application framework for Nodejs. Simplifies server side development. provides routing, middleware
        support and various HTTP utility methods for building APIs and web apps.

    Vue js:
        Progressive JavaScript framework for building user interfaces. emphasizes declarative rendering, component
        based architecture and two way data binding for interactive web applications.

    Next js:
        React framework for server-rendered React applications. Facilitates server side rendering, automatic code
        splitting and Simplified routing for React based web projects.

    Electron js:
        Cross-Platform desktop application framework, utilizes web technologies(HTML, CSS, JS) to build desktop
        applications compatible with windows. mac and linux.
    Touri js:


Node.js ?
server side development?


index.js k tukde karne pr react.js kehlata he
server.js k tukde karne pr MVC architecture kehlata he.

Back end k routes alag honge or frontend routes alag honge.

agar koi object without data he to wo schema kehlata he